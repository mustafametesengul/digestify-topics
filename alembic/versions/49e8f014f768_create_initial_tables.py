"""Create initial tables

Revision ID: 49e8f014f768
Revises:
Create Date: 2025-08-24 21:08:41.016195

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "49e8f014f768"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "handledmessage",
        sa.Column("message_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("handler_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("message_id", "handler_name"),
    )
    op.create_index(
        op.f("ix_handledmessage_created_at"),
        "handledmessage",
        ["created_at"],
        unique=False,
    )
    op.create_table(
        "outboxmessage",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("entity", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("payload", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_outboxmessage_created_at"),
        "outboxmessage",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_outboxmessage_entity"), "outboxmessage", ["entity"], unique=False
    )
    op.create_index(
        op.f("ix_outboxmessage_type"), "outboxmessage", ["type"], unique=False
    )
    op.create_index(
        op.f("ix_outboxmessage_version"), "outboxmessage", ["version"], unique=False
    )
    op.create_table(
        "topic",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("discarded", sa.Boolean(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("locale", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("image_uri", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_topic_created_at"), "topic", ["created_at"], unique=False)
    op.create_index(op.f("ix_topic_discarded"), "topic", ["discarded"], unique=False)
    op.create_index(op.f("ix_topic_is_public"), "topic", ["is_public"], unique=False)
    op.create_index(op.f("ix_topic_locale"), "topic", ["locale"], unique=False)
    op.create_index(op.f("ix_topic_updated_at"), "topic", ["updated_at"], unique=False)
    op.create_index(op.f("ix_topic_user_id"), "topic", ["user_id"], unique=False)
    op.create_index(op.f("ix_topic_version"), "topic", ["version"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("discarded", sa.Boolean(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("created_topic_count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_created_at"), "user", ["created_at"], unique=False)
    op.create_index(
        op.f("ix_user_created_topic_count"),
        "user",
        ["created_topic_count"],
        unique=False,
    )
    op.create_index(op.f("ix_user_discarded"), "user", ["discarded"], unique=False)
    op.create_index(op.f("ix_user_updated_at"), "user", ["updated_at"], unique=False)
    op.create_index(op.f("ix_user_version"), "user", ["version"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_version"), table_name="user")
    op.drop_index(op.f("ix_user_updated_at"), table_name="user")
    op.drop_index(op.f("ix_user_discarded"), table_name="user")
    op.drop_index(op.f("ix_user_created_topic_count"), table_name="user")
    op.drop_index(op.f("ix_user_created_at"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_topic_version"), table_name="topic")
    op.drop_index(op.f("ix_topic_user_id"), table_name="topic")
    op.drop_index(op.f("ix_topic_updated_at"), table_name="topic")
    op.drop_index(op.f("ix_topic_locale"), table_name="topic")
    op.drop_index(op.f("ix_topic_is_public"), table_name="topic")
    op.drop_index(op.f("ix_topic_discarded"), table_name="topic")
    op.drop_index(op.f("ix_topic_created_at"), table_name="topic")
    op.drop_table("topic")
    op.drop_index(op.f("ix_outboxmessage_version"), table_name="outboxmessage")
    op.drop_index(op.f("ix_outboxmessage_type"), table_name="outboxmessage")
    op.drop_index(op.f("ix_outboxmessage_entity"), table_name="outboxmessage")
    op.drop_index(op.f("ix_outboxmessage_created_at"), table_name="outboxmessage")
    op.drop_table("outboxmessage")
    op.drop_index(op.f("ix_handledmessage_created_at"), table_name="handledmessage")
    op.drop_table("handledmessage")
    # ### end Alembic commands ###
